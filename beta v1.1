# imports
import os
import pygame
from pygame import *
from pygame.locals import *
from random import randint
from time import time

# inits
pygame.init()

os.environ['SDL_VIDEO_CENTERED'] = '1'

screen_width=800
screen_height=500
screen = pygame.display.set_mode((screen_width, screen_height),0,0)

def text_format(message, textFont, textSize, textColor):
    newFont=pygame.font.Font(textFont, textSize)
    newText=newFont.render(message, 0, textColor)
    return newText

white=(255, 255, 255)
black=(0, 0, 0)
gray=(50, 50, 50)
red=(255, 0, 0)
green=(0, 255, 0)
blue=(0, 0, 255)
yellow=(255, 255, 0)
lightblue = (134,134,255)

font = None

clock = pygame.time.Clock()
FPS=30
# background = transform.scale(image.load("all/img/bg.jpg"), (800, 500))

# window settings
game = True
logiks = 100

tolkaninfo = False

# sprites
class HedgeHog(sprite.Sprite):
    def __init__(self,health,age, tolkan, days_alive,xcor,ycor,image):
        self.health = health
        self.age = age
        self.days_alive = days_alive
        self.tolkan = tolkan
        self.xcor = xcor
        self.ycor = ycor
        self.image = image
        
        
    def reset(self):
        screen.blit(self.image,(xcor,ycor))
        
        
    def is_tolkan_full(self):
        global tolkaninfo
        if self.tolkan:
            self.health -=1
            

    def health(self):
        if self.health == 0:
            pass
            
        

# Game

# main menu
cont_open = False
selected = "start"

def main_menu():
    global game
    cont_open = False
    selected = "start"
    while game:
        clock.tick(FPS)
        pygame.display.set_caption("Tamagocii")  
    
        # Main Menu UI
        screen.fill(lightblue)
        # screen.blit(background, (0, 0))
        logimage = transform.scale(image.load('all/images/logo.jpg'), (200, 150))
        title=text_format("Tamagoci", font, 90, yellow)
        if selected=="start":
            text_start=text_format("START", font, 75, yellow)
        else:
            text_start = text_format("START", font, 75, black)
        if selected=="quit":
            text_quit=text_format("QUIT", font, 75, yellow)
        else:
            text_quit = text_format("QUIT", font, 75, black)
        if selected=="control":
            text_control=text_format("CONTROL", font, 75, yellow)
        else:
            text_control = text_format("CONTROL", font, 75, black)
        if selected=="return":
                text_return=text_format("return", font, 75, yellow)
        else:
            text_return = text_format("return", font, 75, black)

        # controll text
        movement_text = text_format('To see info press : "TAB"', font, 55, white) #TAB
        next_page_text = text_format('To see info press', font, 55, white) # 


        # 
        title_rect=title.get_rect()
        start_rect=Rect(screen_width/2, 240, 100, 40)
        quit_rect = Rect(screen_width/2, 360,100, 40)
        control_rect = Rect(screen_width/2, 300, 100, 40)
        return_rect = Rect( 50,20, 100, 40)

        # Main Menu Text
        if cont_open == False:
            screen.blit(logimage, (screen_width/5 - (title_rect[2]/2), 80))
            screen.blit(title, (screen_width/2 - (title_rect[2]/2), 80))
            screen.blit(text_start, ((screen_width/2 - (start_rect[2]/2), 240)))
            screen.blit(text_control, (screen_width / 2 - (quit_rect[2] / 2), 300))
            screen.blit(text_quit, (screen_width / 2 - (start_rect[2] / 2), 360))
        elif cont_open:
            # hide text
            title_rect=title.get_rect()
            start_rect=Rect(screen_width/2, 240, 0, 0)
            quit_rect = Rect(screen_width/2, 360,0, 0)
            control_rect = Rect(screen_width/2, 300, 0, 0)
            return_rect = Rect( 50,20, 100, 40)
    
            # show controll_menu
            screen.blit(text_return, (50,20,))

        else:
            pass


        for event in pygame.event.get():
            if event.type==pygame.QUIT:
                game = False
            mouse_pos = pygame.mouse.get_pos()
            if start_rect.collidepoint(mouse_pos):
                selected = "start"
            if quit_rect.collidepoint(mouse_pos):
                selected = "quit"
            if control_rect.collidepoint(mouse_pos):
                selected = "control"
            if return_rect.collidepoint(mouse_pos):
                selected = "return"

            if event.type == pygame.MOUSEBUTTONDOWN and event.button == 1:
                print(start_rect)
                mouse_pos = event.pos
                if start_rect.collidepoint(mouse_pos):
                    print('hello')
                    selected = "start"
                if quit_rect.collidepoint(mouse_pos):
                    print('hello')
                    selected = "quit"
                    game = False
                if control_rect.collidepoint(mouse_pos):
                    print('hello')
                    selected = "control"
                    cont_open = True
                if return_rect.collidepoint(mouse_pos):
                    print('hello')
                    selected = "return"
                    cont_open = False
        pygame.display.update()

main_menu()
