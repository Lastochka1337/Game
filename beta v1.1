# imports
import os
import pygame
from pygame import *
from pygame.locals import *
from random import randint
from time import time
# from pygame import pygame_menu

# inits
pygame.init()

os.environ['SDL_VIDEO_CENTERED'] = '1'

screen_width=800
screen_height=600
screen = pygame.display.set_mode((screen_width, screen_height))

def text_format(message, textFont, textSize, textColor):
    newFont=pygame.font.Font(textFont, textSize)
    newText=newFont.render(message, 0, textColor)
    return newText

white=(255, 255, 255)
black=(0, 0, 0)
gray=(50, 50, 50)
red=(255, 0, 0)
green=(0, 255, 0)
blue=(0, 0, 255)
yellow=(255, 255, 0)

font = None

clock = pygame.time.Clock()
FPS=30
background = transform.scale(image.load("all/img/bg.jpg"), (800, 500))

# window settings
game = True
logiks = 100

tolkaninfo = False

# sprites
class HedgeHog():
    def __init__(self,name,health,age, tolkan, days_alive):
        self.name = name
        self.health = health
        self.age = age
        self.days_alive = days_alive
        self.tolkan = tolkan
    def is_tolkan_full(self):
        global tolkaninfo
        if self.tolkan:
            self.health -=1
            

    def health(self):
        if self.health == 0:
            pass
            
        

# Game

# game menu
cont_open = False
selected = "start"
while game:
    for event in pygame.event.get():
        if event.type==pygame.QUIT:
            game = False
        if event.type == pygame.MOUSEBUTTONDOWN:
            mouse_pos = event.pos
            print(mouse_pos)
        if event.type == pygame.KEYDOWN:
    
            if start_rect.collidepoint(mouse_pos):
                print('hello')
                selected="start"
            elif event.key==pygame.K_DOWN and selected == 'start' or event.key==pygame.K_UP and selected == 'control':
                selected = "quit"
            elif event.key == pygame.K_DOWN and selected == 'quit':
                selected = 'control'
            elif event.key == pygame.K_ESCAPE and cont_open == True:
                selected = 'return'
            if event.key==pygame.K_RETURN:
                if selected=="start":
                    print("Start")
                if selected =='control':
                    print(selected)
                    cont_open = True
                if selected == "quit":
                    game = False
                if selected == "return":
                    cont_open = False
                    print("return")
    # pressed1, pressed2, pressed3 = pygame.mouse.get_pressed()
    # Main Menu UI
    screen.blit(background, (0, 0))
    title=text_format("Tamagoci", font, 90, yellow)
    if selected=="start":
        text_start=text_format("START", font, 75, white)
    else:
        text_start = text_format("START", font, 75, black)
    if selected=="quit":
        text_quit=text_format("QUIT", font, 75, white)
    else:
        text_quit = text_format("QUIT", font, 75, black)
    if selected=="control":
        text_control=text_format("CONTROL", font, 75, white)
    else:
        text_control = text_format("CONTROL", font, 75, black)
    if selected=="return":
            text_return=text_format("return", font, 75, white)
    else:
        text_return = text_format("return", font, 75, black)

    title_rect=title.get_rect()
    start_rect=text_start.get_rect()
    quit_rect = text_quit.get_rect()
    control_rect = text_control.get_rect()
    return_rect = text_return.get_rect()
    
    # Main Menu Text
    if cont_open == False:
        screen.blit(title, (screen_width/2 - (title_rect[2]/2), 80))
        screen.blit(text_start, (screen_width/2 - (start_rect[2]/2), 270))
        screen.blit(text_control, (screen_width / 2 - (quit_rect[2] / 2), 300))
        screen.blit(text_quit, (screen_width / 2 - (start_rect[2] / 2), 360))
    else:
       screen.blit(text_return, (screen_width / 2 - (start_rect[2] / 2), 360))
    clock.tick(FPS)
    pygame.display.set_caption("Python - Pygame Simple Main Menu Selection")
    pygame.display.update()
